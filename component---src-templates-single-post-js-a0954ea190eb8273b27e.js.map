{"version":3,"sources":["webpack:///./node_modules/react-feather/dist/icons/chevron-left.js","webpack:///./src/templates/SinglePost.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","displayName","SinglePostTemplate","title","date","body","nextPostURL","prevPostURL","categories","className","itemScope","itemType","to","itemProp","map","cat","index","category","Content","pageQuery","SinglePost","data","post","thisEdge","allPosts","edges","find","edge","node","id","Layout","meta","frontmatter","html","_get"],"mappings":"0PAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAG9B,SAASS,EAAyBP,EAAQQ,GACxC,GAAc,MAAVR,EAAgB,MAAO,GAE3B,IAEIC,EAAKJ,EAFLD,EAkBN,SAAuCI,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EA9BMgB,CAA8BZ,EAAQQ,GAInD,GAAId,OAAOmB,sBAAuB,CAChC,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAEpD,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IACvCI,EAAMa,EAAiBjB,GACnBW,EAASG,QAAQV,IAAQ,GACxBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KACxDL,EAAOK,GAAOD,EAAOC,IAIzB,OAAOL,EAmBT,IAAIoB,EAAc,sBAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAaF,EAAKG,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACjDE,EAAYJ,EAAKK,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAOhB,EAAyBU,EAAM,CAAC,QAAS,SAEpD,OAAoB,IAAMO,cAAc,MAAO/B,EAAS,CACtDyB,IAAKA,EACLO,MAAO,6BACPC,MAAOJ,EACPK,OAAQL,EACRM,QAAS,YACTC,KAAM,OACNC,OAAQV,EACRW,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfV,GAAoB,IAAMC,cAAc,WAAY,CACrDU,OAAQ,wBAGZlB,EAAYmB,YAAc,cACX,Q,wBCrEFC,G,UAAqB,SAAC,GAAD,IAChCC,EADgC,EAChCA,MACAC,EAFgC,EAEhCA,KACAC,EAHgC,EAGhCA,KACAC,EAJgC,EAIhCA,YACAC,EALgC,EAKhCA,YALgC,IAMhCC,kBANgC,MAMnB,GANmB,SAQhC,8BACE,6BACEC,UAAU,2BACVC,WAAS,EACTC,SAAS,iCAET,yBAAKF,UAAU,oBACb,kBAAC,OAAD,CAAMA,UAAU,yBAAyBG,GAAG,UAC1C,kBAAC,EAAD,MADF,SAGA,yBAAKH,UAAU,gCACb,yBAAKA,UAAU,oBACZL,GACC,0BACEK,UAAU,yBACVI,SAAS,oCACTT,KAAMA,GAELA,GAGJI,GACC,kBAAC,WAAD,KACE,mCACCA,EAAWM,KAAI,SAACC,EAAKC,GAAN,OACd,0BACEjD,IAAKgD,EAAIE,SACTR,UAAU,8BAETM,EAAIE,SAEJD,IAAUR,EAAW3C,OAAS,EAAI,IAAM,SAOlDsC,GACC,wBAAIM,UAAU,oBAAoBI,SAAS,SACxCV,GAIL,yBAAKM,UAAU,4BACb,kBAACS,EAAA,EAAD,CAASpD,OAAQuC,KAGnB,yBAAKI,UAAU,0BACZF,GACC,kBAAC,OAAD,CACEE,UAAU,oCACVG,GAAIL,GAFN,iBAODD,GACC,kBAAC,OAAD,CACEG,UAAU,oCACVG,GAAIN,GAFN,oBAmCDa,GAFEC,UAlBI,SAAC,GAAkC,IAAD,IAA/BC,KAAQC,EAAuB,EAAvBA,KACtBC,EAD6C,EAAjBC,SACRC,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAOP,EAAKO,MACnE,OACE,kBAACC,EAAA,EAAD,CACEC,KAAMT,EAAKU,YAAYD,OAAQ,EAC/B5B,MAAOmB,EAAKU,YAAY7B,QAAS,GAEjC,kBAAC,EAAD,iBACMmB,EACAA,EAAKU,YAFX,CAGE3B,KAAMiB,EAAKW,KACX3B,YAAa4B,IAAKX,EAAU,oBAC5BhB,YAAa2B,IAAKX,EAAU,6BAQd,e","file":"component---src-templates-single-post-js-a0954ea190eb8273b27e.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;","import React, { Fragment } from 'react'\r\nimport _get from 'lodash/get'\r\nimport { Link, graphql } from 'gatsby'\r\nimport { ChevronLeft } from 'react-feather'\r\n\r\nimport Content from '../components/Content'\r\nimport Layout from '../components/Layout'\r\nimport './SinglePost.css'\r\n\r\nexport const SinglePostTemplate = ({\r\n  title,\r\n  date,\r\n  body,\r\n  nextPostURL,\r\n  prevPostURL,\r\n  categories = []\r\n}) => (\r\n  <main>\r\n    <article\r\n      className=\"SinglePost section light\"\r\n      itemScope\r\n      itemType=\"http://schema.org/BlogPosting\"\r\n    >\r\n      <div className=\"container skinny\">\r\n        <Link className=\"SinglePost--BackButton\" to=\"/blog/\">\r\n          <ChevronLeft /> BACK\r\n        </Link>\r\n        <div className=\"SinglePost--Content relative\">\r\n          <div className=\"SinglePost--Meta\">\r\n            {date && (\r\n              <time\r\n                className=\"SinglePost--Meta--Date\"\r\n                itemProp=\"dateCreated pubdate datePublished\"\r\n                date={date}\r\n              >\r\n                {date}\r\n              </time>\r\n            )}\r\n            {categories && (\r\n              <Fragment>\r\n                <span>|</span>\r\n                {categories.map((cat, index) => (\r\n                  <span\r\n                    key={cat.category}\r\n                    className=\"SinglePost--Meta--Category\"\r\n                  >\r\n                    {cat.category}\r\n                    {/* Add a comma on all but last category */}\r\n                    {index !== categories.length - 1 ? ',' : ''}\r\n                  </span>\r\n                ))}\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n\r\n          {title && (\r\n            <h1 className=\"SinglePost--Title\" itemProp=\"title\">\r\n              {title}\r\n            </h1>\r\n          )}\r\n\r\n          <div className=\"SinglePost--InnerContent\">\r\n            <Content source={body} />\r\n          </div>\r\n\r\n          <div className=\"SinglePost--Pagination\">\r\n            {prevPostURL && (\r\n              <Link\r\n                className=\"SinglePost--Pagination--Link prev\"\r\n                to={prevPostURL}\r\n              >\r\n                Previous Post\r\n              </Link>\r\n            )}\r\n            {nextPostURL && (\r\n              <Link\r\n                className=\"SinglePost--Pagination--Link next\"\r\n                to={nextPostURL}\r\n              >\r\n                Next Post\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  </main>\r\n)\r\n\r\n// Export Default SinglePost for front-end\r\nconst SinglePost = ({ data: { post, allPosts } }) => {\r\n  const thisEdge = allPosts.edges.find(edge => edge.node.id === post.id)\r\n  return (\r\n    <Layout\r\n      meta={post.frontmatter.meta || false}\r\n      title={post.frontmatter.title || false}\r\n    >\r\n      <SinglePostTemplate\r\n        {...post}\r\n        {...post.frontmatter}\r\n        body={post.html}\r\n        nextPostURL={_get(thisEdge, 'next.fields.slug')}\r\n        prevPostURL={_get(thisEdge, 'previous.fields.slug')}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SinglePost\r\n\r\nexport const pageQuery = graphql`\r\n  ## Query for SinglePost data\r\n  ## Use GraphiQL interface (http://localhost:8000/___graphql)\r\n  ## $id is processed via gatsby-node.js\r\n  ## query name must be unique to this file\r\n  query SinglePost($id: String!) {\r\n    post: markdownRemark(id: { eq: $id }) {\r\n      ...Meta\r\n      html\r\n      id\r\n      frontmatter {\r\n        title\r\n        template\r\n        subtitle\r\n        date(formatString: \"MMMM Do, YYYY\")\r\n        categories {\r\n          category\r\n        }\r\n      }\r\n    }\r\n\r\n    allPosts: allMarkdownRemark(\r\n      filter: { fields: { contentType: { eq: \"posts\" } } }\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n        }\r\n        next {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n        previous {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}